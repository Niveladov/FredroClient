//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FredroClient.FredroWcfServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TheMessage", Namespace="http://schemas.datacontract.org/2004/07/FredroWcfServer.Models.DatabaseObjectMode" +
        "ls.Tables")]
    [System.SerializableAttribute()]
    public partial class TheMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromFullRawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIncomingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOutcomingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToFullRawField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromAddress {
            get {
                return this.FromAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FromAddressField, value) != true)) {
                    this.FromAddressField = value;
                    this.RaisePropertyChanged("FromAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromDisplayName {
            get {
                return this.FromDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FromDisplayNameField, value) != true)) {
                    this.FromDisplayNameField = value;
                    this.RaisePropertyChanged("FromDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromFullRaw {
            get {
                return this.FromFullRawField;
            }
            set {
                if ((object.ReferenceEquals(this.FromFullRawField, value) != true)) {
                    this.FromFullRawField = value;
                    this.RaisePropertyChanged("FromFullRaw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIncoming {
            get {
                return this.IsIncomingField;
            }
            set {
                if ((this.IsIncomingField.Equals(value) != true)) {
                    this.IsIncomingField = value;
                    this.RaisePropertyChanged("IsIncoming");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOutcoming {
            get {
                return this.IsOutcomingField;
            }
            set {
                if ((this.IsOutcomingField.Equals(value) != true)) {
                    this.IsOutcomingField = value;
                    this.RaisePropertyChanged("IsOutcoming");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailedBy {
            get {
                return this.MailedByField;
            }
            set {
                if ((object.ReferenceEquals(this.MailedByField, value) != true)) {
                    this.MailedByField = value;
                    this.RaisePropertyChanged("MailedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignedBy {
            get {
                return this.SignedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedByField, value) != true)) {
                    this.SignedByField = value;
                    this.RaisePropertyChanged("SignedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToAddress {
            get {
                return this.ToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ToAddressField, value) != true)) {
                    this.ToAddressField = value;
                    this.RaisePropertyChanged("ToAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToDisplayName {
            get {
                return this.ToDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ToDisplayNameField, value) != true)) {
                    this.ToDisplayNameField = value;
                    this.RaisePropertyChanged("ToDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToFullRaw {
            get {
                return this.ToFullRawField;
            }
            set {
                if ((object.ReferenceEquals(this.ToFullRawField, value) != true)) {
                    this.ToFullRawField = value;
                    this.RaisePropertyChanged("ToFullRaw");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FredroWcfServer.IFredroWcfServer")]
    public interface IFredroWcfServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFredroWcfServer/GetAllMessages", ReplyAction="http://tempuri.org/IFredroWcfServer/GetAllMessagesResponse")]
        FredroClient.FredroWcfServer.TheMessage[] GetAllMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFredroWcfServer/GetAllMessages", ReplyAction="http://tempuri.org/IFredroWcfServer/GetAllMessagesResponse")]
        System.Threading.Tasks.Task<FredroClient.FredroWcfServer.TheMessage[]> GetAllMessagesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFredroWcfServerChannel : FredroClient.FredroWcfServer.IFredroWcfServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FredroWcfServerClient : System.ServiceModel.ClientBase<FredroClient.FredroWcfServer.IFredroWcfServer>, FredroClient.FredroWcfServer.IFredroWcfServer {
        
        public FredroWcfServerClient() {
        }
        
        public FredroWcfServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FredroWcfServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FredroWcfServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FredroWcfServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FredroClient.FredroWcfServer.TheMessage[] GetAllMessages() {
            return base.Channel.GetAllMessages();
        }
        
        public System.Threading.Tasks.Task<FredroClient.FredroWcfServer.TheMessage[]> GetAllMessagesAsync() {
            return base.Channel.GetAllMessagesAsync();
        }
    }
}
