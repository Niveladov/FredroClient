//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TwinkleClient.BusinessObjectService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BusinessObjectService.IBusinessObjectService")]
    public interface IBusinessObjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetPerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/GetPerformerResponse")]
        TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer GetPerformer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetPerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/GetPerformerResponse")]
        System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer> GetPerformerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/DeletePerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/DeletePerformerResponse")]
        void DeletePerformer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/DeletePerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/DeletePerformerResponse")]
        System.Threading.Tasks.Task DeletePerformerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/UpdatePerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/UpdatePerformerResponse")]
        void UpdatePerformer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/UpdatePerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/UpdatePerformerResponse")]
        System.Threading.Tasks.Task UpdatePerformerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/InsertPerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/InsertPerformerResponse")]
        void InsertPerformer(TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer performer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/InsertPerformer", ReplyAction="http://tempuri.org/IBusinessObjectService/InsertPerformerResponse")]
        System.Threading.Tasks.Task InsertPerformerAsync(TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer performer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/GetDealResponse")]
        TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal GetDeal(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/GetDealResponse")]
        System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal> GetDealAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/DeleteDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/DeleteDealResponse")]
        void DeleteDeal(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/DeleteDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/DeleteDealResponse")]
        System.Threading.Tasks.Task DeleteDealAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/UpdateDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/UpdateDealResponse")]
        void UpdateDeal(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/UpdateDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/UpdateDealResponse")]
        System.Threading.Tasks.Task UpdateDealAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/InsertDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/InsertDealResponse")]
        void InsertDeal(TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal deal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/InsertDeal", ReplyAction="http://tempuri.org/IBusinessObjectService/InsertDealResponse")]
        System.Threading.Tasks.Task InsertDealAsync(TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal deal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllCustomers", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllCustomersResponse")]
        TwinkleDAL.Models.DatabaseObjectModels.Tables.Customer[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllCustomers", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Customer[]> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllPerformers", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllPerformersResponse")]
        TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer[] GetAllPerformers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllPerformers", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllPerformersResponse")]
        System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer[]> GetAllPerformersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllVehicles", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllVehiclesResponse")]
        TwinkleDAL.Models.DatabaseObjectModels.Tables.Vehicle[] GetAllVehicles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllVehicles", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllVehiclesResponse")]
        System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Vehicle[]> GetAllVehiclesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllTripTypes", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllTripTypesResponse")]
        TwinkleDAL.Models.DatabaseObjectModels.Tables.Dictionaries.DictionaryTripType[] GetAllTripTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessObjectService/GetAllTripTypes", ReplyAction="http://tempuri.org/IBusinessObjectService/GetAllTripTypesResponse")]
        System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Dictionaries.DictionaryTripType[]> GetAllTripTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusinessObjectServiceChannel : TwinkleClient.BusinessObjectService.IBusinessObjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusinessObjectServiceClient : System.ServiceModel.ClientBase<TwinkleClient.BusinessObjectService.IBusinessObjectService>, TwinkleClient.BusinessObjectService.IBusinessObjectService {
        
        public BusinessObjectServiceClient() {
        }
        
        public BusinessObjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusinessObjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessObjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessObjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer GetPerformer(int id) {
            return base.Channel.GetPerformer(id);
        }
        
        public System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer> GetPerformerAsync(int id) {
            return base.Channel.GetPerformerAsync(id);
        }
        
        public void DeletePerformer(int id) {
            base.Channel.DeletePerformer(id);
        }
        
        public System.Threading.Tasks.Task DeletePerformerAsync(int id) {
            return base.Channel.DeletePerformerAsync(id);
        }
        
        public void UpdatePerformer(int id) {
            base.Channel.UpdatePerformer(id);
        }
        
        public System.Threading.Tasks.Task UpdatePerformerAsync(int id) {
            return base.Channel.UpdatePerformerAsync(id);
        }
        
        public void InsertPerformer(TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer performer) {
            base.Channel.InsertPerformer(performer);
        }
        
        public System.Threading.Tasks.Task InsertPerformerAsync(TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer performer) {
            return base.Channel.InsertPerformerAsync(performer);
        }
        
        public TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal GetDeal(int id) {
            return base.Channel.GetDeal(id);
        }
        
        public System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal> GetDealAsync(int id) {
            return base.Channel.GetDealAsync(id);
        }
        
        public void DeleteDeal(int id) {
            base.Channel.DeleteDeal(id);
        }
        
        public System.Threading.Tasks.Task DeleteDealAsync(int id) {
            return base.Channel.DeleteDealAsync(id);
        }
        
        public void UpdateDeal(int id) {
            base.Channel.UpdateDeal(id);
        }
        
        public System.Threading.Tasks.Task UpdateDealAsync(int id) {
            return base.Channel.UpdateDealAsync(id);
        }
        
        public void InsertDeal(TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal deal) {
            base.Channel.InsertDeal(deal);
        }
        
        public System.Threading.Tasks.Task InsertDealAsync(TwinkleDAL.Models.DatabaseObjectModels.Tables.Deal deal) {
            return base.Channel.InsertDealAsync(deal);
        }
        
        public TwinkleDAL.Models.DatabaseObjectModels.Tables.Customer[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Customer[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer[] GetAllPerformers() {
            return base.Channel.GetAllPerformers();
        }
        
        public System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Performer[]> GetAllPerformersAsync() {
            return base.Channel.GetAllPerformersAsync();
        }
        
        public TwinkleDAL.Models.DatabaseObjectModels.Tables.Vehicle[] GetAllVehicles() {
            return base.Channel.GetAllVehicles();
        }
        
        public System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Vehicle[]> GetAllVehiclesAsync() {
            return base.Channel.GetAllVehiclesAsync();
        }
        
        public TwinkleDAL.Models.DatabaseObjectModels.Tables.Dictionaries.DictionaryTripType[] GetAllTripTypes() {
            return base.Channel.GetAllTripTypes();
        }
        
        public System.Threading.Tasks.Task<TwinkleDAL.Models.DatabaseObjectModels.Tables.Dictionaries.DictionaryTripType[]> GetAllTripTypesAsync() {
            return base.Channel.GetAllTripTypesAsync();
        }
    }
}
